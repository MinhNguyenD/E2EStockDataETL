{
	"name": "quote_cleansing_ingestion_dataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "raw_datalake_dataset",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "stage_datalake_dataset",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "filter1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          symbol as string,",
				"          name as string,",
				"          price as double,",
				"          changesPercentage as double,",
				"          change as double,",
				"          dayLow as double,",
				"          dayHigh as double,",
				"          yearHigh as double,",
				"          yearLow as double,",
				"          marketCap as long,",
				"          priceAvg50 as double,",
				"          priceAvg200 as double,",
				"          exchange as string,",
				"          volume as integer,",
				"          avgVolume as integer,",
				"          open as double,",
				"          previousClose as double,",
				"          eps as double,",
				"          pe as double,",
				"          earningsAnnouncement as string,",
				"          sharesOutstanding as long,",
				"          timestamp as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 select(mapColumn(",
				"          symbol,",
				"          price,",
				"          changesPercentage,",
				"          change,",
				"          dayLow,",
				"          dayHigh,",
				"          yearHigh,",
				"          yearLow,",
				"          marketCap,",
				"          priceAvg50,",
				"          priceAvg200,",
				"          volume,",
				"          avgVolume,",
				"          eps,",
				"          pe",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 filter(price > 0 && dayLow >= 0 && dayHigh >= 0 && yearLow >= 0 && yearHigh >= 0 && marketCap > 0 && !isNull(pe) && !isNull(eps)",
				") ~> filter1",
				"filter1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}